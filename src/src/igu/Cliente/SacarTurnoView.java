/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package igu.Cliente;

import crud.Classes.ContenedorDatos;
import crud.Classes.Conexion;
import java.sql.*;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author lucas
 */
public class SacarTurnoView extends javax.swing.JFrame {

    private JDatePickerImpl datePicker;
    private JComboBox<String> horaComboBox;

    public SacarTurnoView() {
        initComponents();

        UtilDateModel model = new UtilDateModel();
        Properties p = new Properties();
        JDatePanelImpl datePanel = new JDatePanelImpl(model, p);
        datePicker = new JDatePickerImpl(datePanel, new DateLabelFormatter());

        // Suponiendo que ten√©s un panel en tu formulario para la fecha
        fechaPanel.setLayout(new java.awt.BorderLayout());
        fechaPanel.add(datePicker);
        fechaPanel.revalidate();
        fechaPanel.repaint();

        // Combobox para las horas
        horaComboBox = new JComboBox<>();
        horaPanel.setLayout(new java.awt.BorderLayout());
        horaPanel.add(horaComboBox);
        horaPanel.revalidate();
        horaPanel.repaint();

        // Evento cuando cambias la fecha
        datePicker.addActionListener(e -> cargarHorariosDisponibles());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fechaPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        patenteInput = new javax.swing.JTextField();
        turnoBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        fechaBtn = new javax.swing.JButton();
        horaPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("SACAR TURNO");

        javax.swing.GroupLayout fechaPanelLayout = new javax.swing.GroupLayout(fechaPanel);
        fechaPanel.setLayout(fechaPanelLayout);
        fechaPanelLayout.setHorizontalGroup(
            fechaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 244, Short.MAX_VALUE)
        );
        fechaPanelLayout.setVerticalGroup(
            fechaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        jLabel2.setText("HORA");

        jLabel3.setText("AUTO (Ingrese la Patente, Sin Espacios)");

        turnoBtn.setText("SOLICITAR TURNO");
        turnoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnoBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("FECHA (Lunes a Viernes)");

        fechaBtn.setText("COMPROBAR FECHA");
        fechaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout horaPanelLayout = new javax.swing.GroupLayout(horaPanel);
        horaPanel.setLayout(horaPanelLayout);
        horaPanelLayout.setHorizontalGroup(
            horaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 145, Short.MAX_VALUE)
        );
        horaPanelLayout.setVerticalGroup(
            horaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(fechaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(horaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(patenteInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(79, 79, 79))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(fechaBtn)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(turnoBtn)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(231, 231, 231))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fechaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fechaBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addComponent(horaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patenteInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(turnoBtn)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarHorariosDisponibles() {
        Date selectedDate = (Date) datePicker.getModel().getValue();

        if (selectedDate != null) {
            java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());

            try (Connection conn = Conexion.getConexion()) {
                String query = "SELECT hora FROM turnos WHERE fecha = ?";
                PreparedStatement pst = conn.prepareStatement(query);
                pst.setDate(1, sqlDate);
                ResultSet rs = pst.executeQuery();

                List<String> ocupados = new ArrayList<>();
                while (rs.next()) {
                    // Recorta a formato HH:mm para comparar bien
                    ocupados.add(rs.getString("hora").substring(0, 5));
                }

                horaComboBox.removeAllItems();

                // Horarios disponibles de 08:00 a 20:00
                for (int i = 8; i <= 20; i++) {
                    String hora = String.format("%02d:00", i);
                    if (!ocupados.contains(hora)) {
                        horaComboBox.addItem(hora);
                    }
                }

                if (horaComboBox.getItemCount() == 0) {
                    JOptionPane.showMessageDialog(this, "No hay horarios disponibles para esa fecha.");
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al consultar turnos: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "¬°Por favor selecciona una fecha!");
        }
    }

    private void fechaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaBtnActionPerformed
        Date fechaTurno = (Date) datePicker.getModel().getValue();

        if (fechaTurno != null) {
            java.sql.Date sqlDate = new java.sql.Date(fechaTurno.getTime());
            try (Connection conn = Conexion.getConexion()) {
                String query = "SELECT hora FROM turnos WHERE fecha = ?";
                PreparedStatement pst = conn.prepareStatement(query);
                pst.setDate(1, sqlDate);
                ResultSet rs = pst.executeQuery();

                List<String> ocupados = new ArrayList<>();
                while (rs.next()) {
                    ocupados.add(rs.getString("hora").substring(0, 5)); // recorta segundos
                }

                horaComboBox.removeAllItems();

                // Horarios de 8 a 20
                for (int i = 8; i <= 20; i++) {
                    String hora = String.format("%02d:00", i);
                    if (!ocupados.contains(hora)) {
                        horaComboBox.addItem(hora);
                    }
                }

                if (horaComboBox.getItemCount() == 0) {
                    JOptionPane.showMessageDialog(this, "No hay horarios disponibles para esta fecha.");
                    datePicker.getModel().setSelected(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Fecha disponible. Selecciona la hora.");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al consultar turnos: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "¬°No se seleccion√≥ ninguna fecha!");
        }
    }//GEN-LAST:event_fechaBtnActionPerformed

    private void turnoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnoBtnActionPerformed
        // Obtener Patente
        String nroPatente = patenteInput.getText();
        // Obtener Fecha en Formato SQL
        Date fecha = (Date) datePicker.getModel().getValue();
        java.sql.Date fechaSql = new java.sql.Date(fecha.getTime());
        // Obtener Hora
        String hora = (String) horaComboBox.getSelectedItem();
        String horaFormateada = hora + ":00";  // "14:00" -> "14:00:00"
        java.sql.Time horaTurno = java.sql.Time.valueOf(horaFormateada);
        if (nroPatente == null || fechaSql == null || horaTurno == null) {
            JOptionPane.showMessageDialog(this, "Te falta Ingresar algun Valor(Fecha, Hora o Patente)");
            return;
        }
        try (Connection conn = Conexion.getConexion()) {
            String sacarIdQuery = "SELECT id, propietario_id FROM vehiculos WHERE patente = ?";
            PreparedStatement pst = conn.prepareStatement(sacarIdQuery);
            pst.setString(1, nroPatente);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                if (rs.getInt("propietario_id") == ContenedorDatos.getInstance().getIdUser()) {
                    String solicTurnoQuery = "INSERT INTO turnos (vehiculo_id, taller_id, fecha, hora, estado) VALUES (?, ?, ?, ?, ?)";
                    PreparedStatement pst2 = conn.prepareStatement(solicTurnoQuery, Statement.RETURN_GENERATED_KEYS);
                    pst2.setInt(1, rs.getInt("id"));
                    pst2.setInt(2, 1);
                    pst2.setDate(3, fechaSql);
                    pst2.setTime(4, horaTurno);
                    pst2.setString(5, "esperando");
                    int rs2 = pst2.executeUpdate();
                    ResultSet generatedKeys = pst2.getGeneratedKeys();
                    if (rs2 > 0) {
                        if (generatedKeys.next()) {
                            int nroTurno = generatedKeys.getInt(1);  // Obtiene el nro del Turno Generado
                            JOptionPane.showMessageDialog(this, "Turno Solicitado con Exito\nFECHA: " + fechaSql + "\nHORA: " + horaTurno + "\nPATENTE-VEHICULO: " + nroPatente + "\n Nro de Turno: " + nroTurno);
                            ClienteView cv = new ClienteView();
                            cv.setVisible(true);
                            cv.setLocationRelativeTo(null);
                            dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "Error al Solicitar el Turno");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Patente Incorrecta");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Patente Incorrecta");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al solicitar el turno, intente nuevamente" + e.getMessage());
        }

    }//GEN-LAST:event_turnoBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fechaBtn;
    private javax.swing.JPanel fechaPanel;
    private javax.swing.JPanel horaPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField patenteInput;
    private javax.swing.JButton turnoBtn;
    // End of variables declaration//GEN-END:variables
}
