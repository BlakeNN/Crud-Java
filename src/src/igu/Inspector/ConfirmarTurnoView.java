/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package igu.Inspector;

import crud.Classes.ContenedorDatos;
import crud.Classes.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lucas
 */
public class ConfirmarTurnoView extends javax.swing.JFrame {

    private DefaultTableModel dtm;

    /**
     * Creates new form ConfirmarTurnoView2
     */
    public ConfirmarTurnoView(int nro) {
        initComponents();
        dtm = (DefaultTableModel) turnoDataTable.getModel();

        try (Connection conn = Conexion.getConexion()) {
            if (conn != null) {
                String turnoQuery = "SELECT vehiculos.marca, vehiculos.modelo, vehiculos.anio, usuarios.nombre AS propietario, clientes.dni, clientes.telefono FROM turnos INNER JOIN vehiculos ON turnos.vehiculo_id = vehiculos.id INNER JOIN clientes ON vehiculos.propietario_id = clientes.usuario_id INNER JOIN usuarios ON clientes.usuario_id = usuarios.id INNER JOIN talleres ON turnos.taller_id = talleres.id WHERE turnos.id = ?;";
                PreparedStatement pst = conn.prepareStatement(turnoQuery);
                pst.setInt(1, nro);
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    Object[] datos = {
                        rs.getString("marca"),
                        rs.getString("modelo"),
                        rs.getInt("anio"),
                        rs.getString("propietario"),
                        rs.getString("dni"),
                        rs.getString("telefono")
                    };
                    dtm.addRow(datos);
                } else {
                    JOptionPane.showMessageDialog(this, "No se encontró el turno.");
                    dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        turnoDataTable = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        turnoBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        turnoDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Año", "Nombre Prop", "DNI", "Telf"
            }
        ));
        jScrollPane1.setViewportView(turnoDataTable);

        jTextField1.setEditable(false);
        jTextField1.setText("Datos del Turno");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        turnoBtn.setText("CONFIRMAR");
        turnoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(181, 181, 181))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(turnoBtn))
                        .addGap(72, 72, 72))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(turnoBtn)
                .addContainerGap(399, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void turnoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnoBtnActionPerformed
        try (Connection conn = Conexion.getConexion()) {
            if (conn != null) {
                int idInspector = ContenedorDatos.getInstance().getIdUser();
                int idTurno = ContenedorDatos.getInstance().getIdTurno();
                String creaInspQuery = "INSERT INTO inspecciones (`inspector_id`, `turno_id`, `estado`) VALUES (?, ?, ?)";

                PreparedStatement pst = conn.prepareStatement(creaInspQuery, Statement.RETURN_GENERATED_KEYS);
                pst.setInt(1, idInspector);
                pst.setInt(2, idTurno);
                pst.setString(3, "En Proceso");

                int rowsAffected = pst.executeUpdate();

                if (rowsAffected > 0) {
                    ResultSet generatedKeys = pst.getGeneratedKeys();
                    if (generatedKeys.next()) {
                        int idGenerado = generatedKeys.getInt(1);
                        ContenedorDatos.getInstance().setIdInspeccion(idGenerado);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo crear la inspección.");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

        Inspeccion ins = new Inspeccion();
        ins.setVisible(true);
        ins.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_turnoBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton turnoBtn;
    private javax.swing.JTable turnoDataTable;
    // End of variables declaration//GEN-END:variables
}
